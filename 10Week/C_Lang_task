//동전을 100번 던져서 앞면이 나오는 횟수와 뒷면이 나오는 횟수를 출력한다. 
#include <stdio.h>
#include <stdlib.h> //난수 생성 헤더파일
#include <time.h> //srand의 seed값을 매번 다르게 지정하기 위한 수단 

int coin_toss(void);

int main(void)
{
  int toss; //전역변수  
  int heads = 0;  //앞면
  int tails = 0;  //뒷면

  srand((unsigned)time(NULL));

  for(toss = 0; toss < 100; toss++)
  { 
    if(coin_toss()==1){ //발생한 난수의 반환값이 1이면 head++
      heads++;
    }
    else{ //발생한 난수의 반환값이 1이 아니면 tails++
      tails++;
    }
  }
  printf("동전의 앞면 : %d \n", heads);
  printf("동전의 뒷면 : %d \n", tails);
  return 0; 
}

int coin_toss(void) //rand() 난수 발생 함수를 이용해 head에 값을 반환 
{
    int head = rand() % 2;  // "%2"를 통해 발생한 난수를 0과 1의 두 값으로만 반환 
    return head;  //coin_toss 함수의 반환값을 위해 return 
}
//--------------------------------------------------------------------------------------//
//자동차 게임, 난수를 이용하여 자동차 게임 작성
#include <stdlib.h>
#include <stdio.h>
#include <conio.h>  //콘솔 입출력 함수 제공 헤더 -> 맥OS에서 오류 발생..?
#include <time.h>

void disp_car(int car_number, int distance)
{
  int i;
  printf("CAR #%d:", car_number);
  for(i=0;i<distance;i++) //main문 안에 있는 for문에서 발생한 난수를 distance에 들어가고 for문 실행
  {
    printf("*");
  }
  printf("\n")
}

int main(void)
{
  int i;
  int car1_dist=0, car2_dist=0; //거리 담는 함수 

  srand((unsigned)time(NULL)); //난수 발생 

  for(i=0; i<6; i++)
  { 
      car1_dist += rand() % 100;  //"%100"를 통해 발생한 난수를 0 ~ 99까지의 난수를 발생 
      car2_dist += rand() % 100;
      disp_car(1, car1_dist); //car_number에 1이 들어가고 car1_dist에 발생한 난수가 들어감
      disp_car(2, car2_dist);
      printf("---------------\n");
      _getch(); //콘솔값을 받으려고 사용
  }
  return 0;
}
//--------------------------------------------------------------------------------------//
#include <math.h> //여러 수학 함수들을 포함하는 표준 라이브러리 
#include <stdio.h>

int main(void)
{
  double pi = 3.1415926535;
  double x, y;

  x = pi / 2; // pi/2의 결과값을 x에 저장
  y = sin(x);   // y에 수학적 계산 sin(x)의 값을 저장
  printf("sin(%lf)=%lf\n", x, y);
  y = cos(x); // y에 cos(x)의 값을 저장
  printf("cos(%lf)=%lf\n", x, y);
}
//--------------------------------------------------------------------------------------//
//시간 맞추기 게임 
#include <stdio.h>
#include <time.h>

int main(void)
{
  time_t start, end;  //time_t : <time.h>에서 시간을 다루기 위해서 만들어진 데이터 타입
  start = time(NULL); //time(NULL) 함수를 통해 시간을 받아 start 변수에 저장 
  printf("10초가 되면 아무키나 누르세요 \n");
  while (1) // 조건식에 1을 넣음으로써 무한루프 생성
  {
      if(getchar()) //콘솔값을 받으면 break를 통해 무한루프 탈출
      {
        break;
      }
  }
  printf("종료되었습니다.\n");
  end = time(NULL); //다시 현재 시간을 가져와 end 변수에 저장
  printf("경과된 시간은 %ld 초 입니다. \n", end - start); //end 변수에 저장된 시간에서 start 변수에 저장된 시간을 뺄샘
  return 0;  
}
//--------------------------------------------------------------------------------------//
//나무 높이 측정
//각도기와 삼각 함수를 이용하면 나무의 높이를 측정할 수 있다. 다음 그림을 참조하여 나무의 높이를 측정하는 프로그램 작성
#define _CRT_SECURE_NO_WARNONGS
#include <math.h>
#include <stdio.h>

int main(void)
{
  double height, distance, tree_height, degrees, radians;

  printf("나무와의 길이(단위는 미터):");
  scanf("%lf", &distance);

  printf("측정자의 키(단위는 미터):");
  scanf("%lf", &height);

  printf("각도(단위는 도):");
  scanf("%lf", &degrees);

  radians = degrees * (3.141592 / 180.0); //radians 변수에 각도를 라디안으로 변환하는 계산을 수행 

  tree_height = tan(radians) * distance + height; 
  //tree_height 변수에 주어진 각도의 tan 값을 구하고, 이를 distance와 곱하여 나무의 높이를 계산 + 측정자의 바닥에서 눈 까지의 거리
  printf("나무의 높이(단위는 미터):%lf \n", tree_height);

  return 0;  
}
//--------------------------------------------------------------------------------------//
//삼각함수 그리기 
//우리는 삼각함수를 계산하는 라이브러리 함수를 학습하였다. 이것을 이용하여 싸인함수 그래프를 90도 회전하여서 그려보자 
#include <stdio.h>
#include <math.h>
#define PI 3.141592 //

double rad(double degree) //degree를 rad로 변환하는 변수 
{
    return PI * degree / 180.0;
}
void drawbar(int height)  //주어진 높이 만큼 "*" 생성
{ 
  for(int i = 0; i < height; i++)
  { 
    printf("*");
  }
  printf("\n");
}

int main(void)
{ 
  int degree, x, y;
  for(degree =0; degree<=90; degree +=10) // 10단위로 90까지 degree값 증가 
  { 
    y = (int)(60 * sin(rad((double)degree)) + 0.5); //sin값을 계산 후 y에 저장
    drawbar(y); // drawbar함수를 호출하여 y의 값에 맞게 "*" 생성
  }
  return 0;
}
//--------------------------------------------------------------------------------------//
#include <stdio.h>
#include <math.h>

int menu(void)
{
    int n; 
    printf("1. 팩토리얼\n");
    printf("2. 싸인\n");
    printf("3. 로그(base 10)\n");
    printf("4. 제곱근\n");
    printf("5. 순열(nPr)\n");
    printf("6. 조합(nCr)\n");
    printf("7. 종료\n");
    scanf("%d", &n);
    return n;
}

void factorial()
{
  long long n, result = 1 ,i;
  printf("정수를 입력하시오 : ");
  scanf("%lld", &n);
  for(i = 1 i<=n; i++)
  {
    result = result * i;
  }
  printf("결과 = %lld\n\n", result);
}
void sine()
{
  double a, result;
  printf("각도를 입력하시오 : ");
  scanf("%lf", &a);
  result = sin(a);
  printf("결과 = %lf\n\n", result);
}
void logBase()
{ 
  double a, result;
  printf("실수값을 입력하시오 : ");
  scanf("%lf" ,&a);
  if(a <= 0.0)
  { 
    printf("오류\n");
  }
  else 
  {
    result = long10(a);
    printf("결과 = %lf\n\n", result);
  }
}
int main(void)
{
  while(1)
  {
      switch (menu())
      {
      case 1:
        factorial();
        break;
      case 2:
        sine();
        break;
      case 3:
        logBase10();
        break;
      case 7:
        printf("종료합니다.\n");
        return 0;
      
      default:
        printf("잘못된 선택입니다.\n");
        break;
      }
  }
}
